#!/bin/sh

### Set variables - start 
## defaults
giturl=""
module=""
target=""
sdcard=/media/$USER/BENNIE
gitroot=~/git

## Overwrite defaults by conf file
conffile=./conf/syncFlipper.conf
[ -f $conffile ] && . $conffile 

### Set variables - stop

### This script works in two steps
### 1.a. if not exist, clone repository
### 1.b. keep git repositorys up to date
### 2. if SD card is mounted -> sync local git repository to SD

### On the bottom is a own function for the complex structure of UberGuidoz.
 
checkRequirement() {
	[ ! -x "$(command -v $1)" ] && { echo "$1 is not installed"; exit 1 ; }
}
checkRequirement rsync
checkRequirement git


gitSync () {

## Overwrite defaults and conf file by arguments
while getopts g:m:t:s:r: flag
do
    case "${flag}" in
        g) giturl=${OPTARG};;
        m) module=${OPTARG};;
        t) target=${OPTARG};;
        s) sdcard=${OPTARG};;
        r) gitroot=${OPTARG};;
    esac
done

	gitpath=$gitroot/$(basename $giturl)

	if [ $# -lt 2 ]; then
		echo "Usage: $(basename $0) -g <gitURL> -m <module> [-t target]"
		echo "<module>: badusb infrared nfc subghz ibutton music_player"
		exit 1
	fi

	# check if subpath on SD is okay
	case $module in
		badusb|infrared|nfc|subghz|ibutton|music_player) ;;
		*) echo "Allowed <module>: badusb infrared nfc subghz ibutton music_player" ; exit 1;;
	esac

	# If no SD subpath target is given, copy to subpath
	
	[ -z $target ] && { target=$(basename $giturl) ; }

	# If local git repo doesn't exist, clone first.
	[ ! -d "$gitpath" ] && { cd $gitroot && git clone --recursive $giturl; }
	cd $gitpath && git pull

	# If SD Card is mounted (mointpoint exist)
	# Some repository are often moving files around. --delete will take care of that.
	if [ -d "$sdcard" ]; then
		rsync -rv --checksum --delete $gitpath/ $sdcard/$module/$target/
		echo "Size on SD: " $(du -hs $sdcard/$module/$target)
	fi

	echo "Local size: " $(du -hs $gitpath)
}


#####################################################################
### The UberGuidoZ is a large collection of 3,5 GB valuable files.
### Some ressources are redundant to other repositorys.
### It is harder to navigate on the flipper, so I replaced some dirs.
### Feel free to comment any path, to reduce the size on SD

guidoSync () {
	gitpath=$gitroot/$(basename $1)
	
	# If local git repo doesn't exist, clone first.
	[ ! -d "$gitpath" ] && { cd $gitroot && git clone --recursive $1; }
	cd $gitpath && git pull

	# If SD Card is mounted (mointpoint exist)
	# Some repository are often moving files around. --delete will take care of that.
	if [ -d "$sdcard" ]; then
		rsync -rv --checksum --delete $gitpath/NFC/ $sdcard/nfc/guidoz/
		rsync -rv --checksum --delete $gitpath/Sub-GHz/ $sdcard/subghz/guidoz/
		rsync -rv --checksum --delete $gitpath/subplaylist/ $sdcard/subplaylist/
		rsync -rv --checksum --delete $gitpath/unirf/ $sdcard/unirf/
		rsync -rv --checksum --delete $gitpath/BadUSB/ $sdcard/badusb/guidoz/
		rsync -rv --checksum --delete $gitpath/picopass/ $sdcard/picopass/
		rsync -rv --checksum --delete $gitpath/Wav_Player/ $sdcard/wav_player/
		rsync -rv --checksum --delete $gitpath/Music_Player/ $sdcard/music_player/guidoz/
		echo "Size of dumps on SD: " $(du -hs --total $sdcard/nfc/guidoz/ $sdcard/subghz/guidoz/ $sdcard/subplaylist/ $sdcard/unirf/ $sdcard/badusb/guidoz/ $sdcard/picopass/)
		echo "Size of music on SD: " $(du -hs --total $sdcard/wav_player/ $sdcard/music_player/)
	fi
	
	echo "Local size: " $(du -hs $gitpath)
}

starnewSync () {
	gitpath=$gitroot/$(basename $1)
	
	# If local git repo doesn't exist, clone first.
	[ ! -d "$gitpath" ] && { cd $gitroot && git clone --recursive $1; }
	cd $gitpath && git pull

	# If SD Card is mounted (mointpoint exist)
	# Some repository are often moving files around. --delete will take care of that.
	if [ -d "$sdcard" ]; then
		rsync -rv --checksum --delete $gitpath/StarButton/ $sdcard/ibutton/StarButton/
		rsync -rv --checksum --delete $gitpath/StarRFID/ $sdcard/rfid/StarRFID/
		echo "Size of dumps on SD: " $(du -hs --total  $sdcard/ibutton/StarButton/ $sdcard/rfid/StarRFID/)
	fi
	
	echo "Local size: " $(du -hs $gitpath)
}



## List git repos to sync

## for Information, see https://github.com/djsime1/awesome-flipperzero
gitSync -g https://github.com/logickworkshop/Flipper-IRDB -m infrared
gitSync -g https://github.com/Gioman101/FlipperAmiibo -m nfc
gitSync -g https://github.com/tobiabocchi/flipperzero-bruteforce -m subghz
gitSync -g https://github.com/UNC0V3R3D/Flipper_Zero-BadUsb -m badusb -t UNC0V3R3D
gitSync -g https://github.com/I-Am-Jakoby/Flipper-Zero-BadUSB -m badusb -t I-Am-Jakoby
gitSync -g https://github.com/FalsePhilosopher/badusb -m badusb -t FalsePhilosopher
gitSync -g https://github.com/nocomp/Flipper_Zero_Badusb_hack5_payloads -m badusb -t hack5_payloads
gitSync -g https://github.com/jimilinuxguy/flipperzero-touchtunes -m subghz -t touchtunes
gitSync -g https://github.com/neverfa11ing/FlipperMusicRTTTL -m music_player -t rtttl
gitSync -g https://github.com/Tonsil/flipper-music-files -m music_player -t fmf
gitSync -g https://github.com/wetox-team/flipperzero-goodies -m ibutton -t wetox
gitSync -g https://github.com/xb8/t119bruteforcer -m subghz -t t119pager

starnewSync https://github.com/GlUTEN-BASH/Flipper-Starnew

guidoSync https://github.com/UberGuidoZ/Flipper

## syncFlipperApps - Allowed <firmware>: official dev unleashed roughmaster xtreme
## Not working!

## Copy apps from GuidoZ to SD Card

fwApps () {
	case $1 in
		official) fwPath=Official/STABLE_FW;;
		dev) fwPath=Official/DEV_FW;;
		unleashed) fwPath=Custom*/Unleashed*;;
		roguemaster) fwPath=Custom*/RogueMaster;;
		xtreme) fwPath=Custom*/Xtreme*;;
		*) echo "Allowed <firmware>: official dev unleashed roughmaster xtreme" ; exit 1;;
	esac

	fwAppDir=$gitroot/Flipper/Applications/$fwPath
	for appDir in $(ls $fwAppDir) ; do
		appTarget=$sdcard/apps/$1/$appDir
		#echo "from $fwAppDir/$appDir/*.fap to $appTarget/"
		rsync -rv --checksum --delete $fwAppDir/$appDir/ $appTarget/
	done
}

#fwApps unleashed


cd ~
